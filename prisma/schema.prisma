// This is your updated Prisma schema file

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model Section {
  id       String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  msgid    String    @unique @db.VarChar(100)
  iconName String    @db.VarChar(100)
  question Question?
}

model Question {
  id               String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  msgid            String   @unique @db.VarChar(100)
  isMultipleChoice Boolean  @default(false)
  isMediaQuestion  Boolean  @default(false)
  additionalInfo   String?
  answers          Answer[]
  section          Section  @relation(fields: [sectionId], references: [id], onDelete: Cascade)
  sectionId        String   @unique @db.Uuid
}

model Answer {
  id                     String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  msgid                  String   @unique @db.VarChar(100)
  mediaSourcePath        String?
  question               Question @relation(fields: [questionId], references: [id], onDelete: Cascade)
  questionId             String   @db.Uuid
  blocks                 Answer[] @relation("BlockedAnswer")
  blockedBy              Answer[] @relation("BlockedAnswer")
  // results where answer has been selected, and marked important, respectively.
  resultSelectedAnswers  Result[] @relation("SelectedAnswers")
  resultImportantAnswers Result[] @relation("ImportantAnswers")
}

model Distribution {
  id         String  @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name       String  @db.VarChar(200)
  identifier String  @unique @db.VarChar(200)
  fgColor    String?  @db.VarChar(100)
  bgColor    String?  @db.VarChar(100)
  logo       String?
  url        String?
}

model Result {
  id               String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  ip               String?  @db.Inet
  createdAt        DateTime @default(now())
  selectedAnswers  Answer[] @relation("SelectedAnswers")
  importantAnswers Answer[] @relation("ImportantAnswers")
}
